services:

  # --- TAILSCALE PROXY
  # Dashboard port: 81
  # Exposes ports: 80, 81, 443
  nginx-ts:
    image: tailscale/tailscale:latest
    container_name: nginx-ts
    hostname: "{{ server.hostname }}-docker-proxy"
    restart: unless-stopped
    volumes:
      - ${PWD}/tailscale/state:/var/lib/tailscale
      - /dev/net/tun:/dev/net/tun
    cap_add:
      - net_admin
      - sys_module
    environment:
      - TS_AUTHKEY=${TAILSCALE_AUTHKEY}
      - TS_USERSPACE=false
      - TS_STATE_DIR=/var/lib/tailscale
    networks:
      - proxy
    healthcheck:
      # Check if Tailscale network interface is loaded
      test: ["CMD-SHELL", " ip a | grep -q tailscale"]

  # --- PROXY
  nginx:
    image: 'jc21/nginx-proxy-manager:latest'
    container_name: nginx
    restart: unless-stopped
    network_mode: service:nginx-ts
    volumes:
      - ${PWD}/nginx/data:/data
      - ${PWD}/nginx/letsencrypt:/etc/letsencrypt
    healthcheck:
      test: ["CMD", "/usr/bin/check-health"]
      interval: 10s
      timeout: 3s
    depends_on:
      nginx-ts:
        condition: service_healthy

  # --- WATCHDOG
  watchtower:
    container_name: watchtower
    image: containrrr/watchtower
    restart: unless-stopped
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock

  # --- INTERNAL DNS
  # Exposes ports: 53/tcp, 53/udp, 3000
  adguardhome:
    image: adguard/adguardhome
    container_name: 'adguardhome'
    restart: unless-stopped
    volumes:
      - ${PWD}/adguard/work:/opt/adguardhome/work
      - ${PWD}/adguard/conf:/opt/adguardhome/conf
    networks:
      - proxy
    depends_on:
      nginx:
        condition: service_healthy

  # Exposes ports: 3000
  homepage:
    image: ghcr.io/gethomepage/homepage:latest
    container_name: homepage
    restart: unless-stopped
    volumes:
      - ${PWD}/homepage/config:/app/config
    environment:
      PUID: "{{ user.PUID }}"
      PGID: "{{ user.PGID }}"
    networks:
      - proxy
    depends_on:
      nginx:
        condition: service_healthy

  # Exposes ports: 8182
  sshwifty:
    image: niruix/sshwifty:latest
    container_name: sshwifty
    restart: unless-stopped
    networks:
      - proxy
    depends_on:
      nginx:
        condition: service_healthy

  # Exposes ports: 3000, 22
  gitea:
    image: gitea/gitea:latest
    container_name: gitea
    environment:
      - USER_UID={{ user.PUID }}
      - USER_GID={{ user.PGID }}
    restart: unless-stopped
    volumes:
      - ${PWD}/gitea/data:/data
      - /etc/timezone:/etc/timezone:ro
      - /etc/localtime:/etc/localtime:ro
    networks:
      - proxy
    depends_on:
      nginx:
        condition: service_healthy

networks:
  proxy:
